#ifndef CSOAP_CLIENT_H_
#define CSOAP_CLIENT_H_

#include <string>
#include <vector>

#include "csoap/globals.h"
#include "csoap/parameter.h"
#include "csoap/response.h"

namespace webcc {
class ClientSession;
}

namespace csoap {

class Client {
public:
  explicit Client(const std::string& url,
                  SoapVersion soap_version = kSoapV12);

  ~Client();

  Client(const Client&) = delete;
  Client& operator=(const Client&) = delete;

  void set_service_ns(const SoapNamespace& service_ns) {
    service_ns_ = service_ns;
  }

  void set_format_raw(bool format_raw) {
    format_raw_ = format_raw;
  }

  void set_indent_str(const std::string& indent_str) {
    indent_str_ = indent_str;
  }

  void SetTimeout(int seconds);

  bool Request(const std::string& operation,
               std::vector<Parameter>&& parameters,
               Response::Parser parser,
               std::size_t buffer_size = 0);

  // Shortcut for responses with single result node.
  // The name of the single result node is specified by |result_name|.
  // The text of the result node will be set to |result|.
  bool Request(const std::string& operation,
               std::vector<Parameter>&& parameters,
               const std::string& result_name,
               std::size_t buffer_size,  // Pass 0 for using default size.
               std::string* result);

  // HTTP status code (200, 500, etc.) in the response.
  int http_status() const {
    return http_status_;
  }

  const webcc::Error& error() const {
    return error_;
  }

  std::shared_ptr<SoapFault> fault() const {
    return fault_;
  }

private:
  std::string url_;

  SoapVersion soap_version_;

  // Namespace for your web service.
  SoapNamespace service_ns_;

  // Format request XML without any indentation or line breaks.
  bool format_raw_;

  // Indent string for request XML.
  // Applicable when |format_raw_| is false.
  std::string indent_str_;

  webcc::ClientSession* session_;

  int http_status_;

  webcc::Error error_;

  std::shared_ptr<SoapFault> fault_;
};

}  // namespace csoap

#endif  // CSOAP_CLIENT_H_
